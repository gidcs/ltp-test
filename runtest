#!/bin/bash

_mem=0
_net=0
_io=0
_env_file="netconf.env"

export TMPBASE="/mnt/remote-disk/"
export LTPROOT="/opt/ltp"
export PATH=${LTPROOT}/testcases/bin:$PATH
export TESTLIST="${PWD}/testlist"
export OUTPUT="${PWD}/output"
mkdir $OUTPUT  > /dev/null 2>&1

function help(){
    echo ""
    echo "Usage:"
    echo "  $0 [-a] [-t <io|mem|net>] [-f <env_file>] [-h]"
    echo ""
    echo "Options:"
    echo "  -a: enable all tests"
    echo "  -t: enable test"
    echo "  -f: specify env_file"
    echo "  -h: help"
    echo ""
}

function __runltp(){
    local _test=$1
    echo "************ Running ${_test} tests "
    rm -f ${OUTPUT}/{ltp-${_test},${_test}.*}
    sort -R ${TESTLIST}/${_test} -o ${OUTPUT}/ltp-${_test}
    ${LTPROOT}/bin/ltp-pan -e -S -a ${_test} -n ${_test} \
        -l ${OUTPUT}/${_test}.logfile \
        -o ${OUTPUT}/${_test}.outfile \
        -p -f ${OUTPUT}/ltp-${_test} &
    wait $!
    sync
    echo "************ End Running ${_test} tests "
}

function io(){
    echo "IO test begin"
    date

    export TMP="$TMPBASE"
    export TMPDIR="$TMP/aiodio"

    mkdir -p $TMPDIR/junkdir  > /dev/null 2>&1

    if [ ! -f $TMPDIR/file1 ]; then
        dd if=/dev/urandom of=$TMPDIR/file1 bs=1M count=100
    fi

    dd if=$TMPDIR/file1 of=$TMPDIR/junkfile bs=8192 conv=block,sync
    __runltp "aio_stress"
    __runltp "aio_stress_extended"

    dd if=$TMPDIR/file1 of=$TMPDIR/junkfile bs=8192 conv=block,sync
    dd if=$TMPDIR/file1 of=$TMPDIR/fff      bs=4096 conv=block,sync
    dd if=$TMPDIR/file1 of=$TMPDIR/ff1      bs=2048 conv=block,sync
    dd if=$TMPDIR/file1 of=$TMPDIR/ff2      bs=1024 conv=block,sync
    dd if=$TMPDIR/file1 of=$TMPDIR/ff3      bs=512  conv=block,sync
    __runltp "aio_cp"
    __runltp "aiodio_sparse"
    __runltp "fsx_linux"

    dd if=$TMPDIR/file1 of=$TMPDIR/file2      bs=2048 conv=block,sync
    dd if=$TMPDIR/file1 of=$TMPDIR/file3      bs=1024 conv=block,sync
    dd if=$TMPDIR/file1 of=$TMPDIR/file4      bs=512  conv=block,sync
    dd if=$TMPDIR/file1 of=$TMPDIR/file5      bs=4096 conv=block,sync
    __runltp "dio_sparse_and_others"

    __runltp "aio_dio"

    rm -f $TMPDIR/fff
    rm -f $TMPDIR/ff1
    rm -f $TMPDIR/ff2
    rm -f $TMPDIR/ff3
    rm -f $TMPDIR/junkfile*
    rm -f $TMPDIR/file*

    date
    echo "IO test end"
}

function mem(){
    echo "MEM test begin"
    date

    __runltp "mem"

    date
    echo "MEM test end"
}

function net(){
    echo "NET test begin"
    date

    . ../netconf.env

    #login test
    ssh ${RUSER}@${RHOST} ls
    
    __runltp "net"

    date
    echo "NET test end"
}

function main {
    echo "io: ${_io}"
    echo "mem: ${_mem}"
    echo "net: ${_net}"
    echo "env_file: ${_env_file}"
    echo ""
    if [ ${_io} -eq 1 ]; then
        echo "run io"
        io
    fi
    if [ ${_mem} -eq 1 ]; then
        echo "run mem"
        mem
    fi
    if [ ${_net} -eq 1 ]; then
        echo "run net"
        net
    fi
    if [ ${_io} -eq 0 ] && [ ${_mem} -eq 0 ] && [ ${_net} -eq 0 ]; then
        echo "run nothing"
        help
        exit 0
    fi
}

while getopts ":af:ht:" opt; do
    case $opt in
        a)
            _io=1
            _mem=1
            _net=1
            ;;
        f)
            _env_file=$OPTARG
            if [ ! -f ${_env_file} ]; then
                echo "[ERROR] ${_env_file} does not exists"
                exit 1
            fi
            ;;
        h)
            help
            exit 0
            ;;
        t)
            if [ "$OPTARG" == "io" ]; then
                _io=1
            elif [ "$OPTARG" == "mem" ]; then
                _mem=1
            elif [ "$OPTARG" == "net" ]; then
                _net=1
            else
                echo "[Error] Invalid type: $OPTARG" >&2
                help
                exit 1
            fi
            ;;
        \?)
            echo "[Error] Invalid option: -$OPTARG" >&2
            help
            exit 1
            ;;
        :)
            echo "Option -$OPTARG requires an argument." >&2
            help
            exit 1
        ;;
    esac
done

main

